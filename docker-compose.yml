services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mentalmentor_api
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql+asyncpg://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}}
      REDIS_URL: ${REDIS_URL:-redis://${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB}}
      JWT_SECRET: ${JWT_SECRET}
      JWT_ALG: ${JWT_ALG}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
      REFRESH_TOKEN_EXPIRE_DAYS: ${REFRESH_TOKEN_EXPIRE_DAYS}
      CORS_ORIGINS: ${CORS_ORIGINS}
    depends_on:
      - db
      - redis

  db:
    image: postgres:16
    container_name: mentalmentor_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: mental
      POSTGRES_PASSWORD: mentor
      POSTGRES_DB: mentalmentor
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: mentalmentor_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY:-minioadmin}
      MINIO_API_CORS_ALLOW_ORIGIN: http://localhost:3000,http://localhost:8000,http://localhost:5173,http://127.0.0.1:5173
      MINIO_API_CORS_ALLOW_METHODS: GET,HEAD,PUT
      MINIO_API_CORS_ALLOW_HEADERS: Authorization,Content-Type
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # MinIO Console
    volumes:
      - minio_data:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://minio:9000/minio/health/live" ]
      interval: 5s
      timeout: 3s
      retries: 20

  minio-setup:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: [ "/bin/sh","-c" ]
    command: >
      mc alias set local http://minio:9000 ${S3_ACCESS_KEY:-minioadmin} ${S3_SECRET_KEY:-minioadmin} &&
      mc mb -p local/${S3_BUCKET:-mentalmentor} || true &&
      mc anonymous set none local/${S3_BUCKET:-mentalmentor} &&
      echo "MinIO bucket ready"
    restart: "on-failure"
    environment:
      S3_BUCKET: ${S3_BUCKET:-mentalmentor}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY:-minioadmin}
      S3_SECRET_KEY: ${S3_SECRET_KEY:-minioadmin}

volumes:
  postgres_data:
  redis_data:
  minio_data:
